{
  "version": 3,
  "sources": ["../../markdown-it-task-lists/index.js"],
  "sourcesContent": ["// Markdown-it plugin to render GitHub-style task lists; see\n//\n// https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments\n// https://github.com/blog/1825-task-lists-in-all-markdown-documents\n\nvar disableCheckboxes = true;\nvar useLabelWrapper = false;\nvar useLabelAfter = false;\n\nmodule.exports = function(md, options) {\n\tif (options) {\n\t\tdisableCheckboxes = !options.enabled;\n\t\tuseLabelWrapper = !!options.label;\n\t\tuseLabelAfter = !!options.labelAfter;\n\t}\n\n\tmd.core.ruler.after('inline', 'github-task-lists', function(state) {\n\t\tvar tokens = state.tokens;\n\t\tfor (var i = 2; i < tokens.length; i++) {\n\t\t\tif (isTodoItem(tokens, i)) {\n\t\t\t\ttodoify(tokens[i], state.Token);\n\t\t\t\tattrSet(tokens[i-2], 'class', 'task-list-item' + (!disableCheckboxes ? ' enabled' : ''));\n\t\t\t\tattrSet(tokens[parentToken(tokens, i-2)], 'class', 'contains-task-list');\n\t\t\t}\n\t\t}\n\t});\n};\n\nfunction attrSet(token, name, value) {\n\tvar index = token.attrIndex(name);\n\tvar attr = [name, value];\n\n\tif (index < 0) {\n\t\ttoken.attrPush(attr);\n\t} else {\n\t\ttoken.attrs[index] = attr;\n\t}\n}\n\nfunction parentToken(tokens, index) {\n\tvar targetLevel = tokens[index].level - 1;\n\tfor (var i = index - 1; i >= 0; i--) {\n\t\tif (tokens[i].level === targetLevel) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction isTodoItem(tokens, index) {\n\treturn isInline(tokens[index]) &&\n\t       isParagraph(tokens[index - 1]) &&\n\t       isListItem(tokens[index - 2]) &&\n\t       startsWithTodoMarkdown(tokens[index]);\n}\n\nfunction todoify(token, TokenConstructor) {\n\ttoken.children.unshift(makeCheckbox(token, TokenConstructor));\n\ttoken.children[1].content = token.children[1].content.slice(3);\n\ttoken.content = token.content.slice(3);\n\n\tif (useLabelWrapper) {\n\t\tif (useLabelAfter) {\n\t\t\ttoken.children.pop();\n\n\t\t\t// Use large random number as id property of the checkbox.\n\t\t\tvar id = 'task-item-' + Math.ceil(Math.random() * (10000 * 1000) - 1000);\n\t\t\ttoken.children[0].content = token.children[0].content.slice(0, -1) + ' id=\"' + id + '\">';\n\t\t\ttoken.children.push(afterLabel(token.content, id, TokenConstructor));\n\t\t} else {\n\t\t\ttoken.children.unshift(beginLabel(TokenConstructor));\n\t\t\ttoken.children.push(endLabel(TokenConstructor));\n\t\t}\n\t}\n}\n\nfunction makeCheckbox(token, TokenConstructor) {\n\tvar checkbox = new TokenConstructor('html_inline', '', 0);\n\tvar disabledAttr = disableCheckboxes ? ' disabled=\"\" ' : '';\n\tif (token.content.indexOf('[ ] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\"' + disabledAttr + 'type=\"checkbox\">';\n\t} else if (token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0) {\n\t\tcheckbox.content = '<input class=\"task-list-item-checkbox\" checked=\"\"' + disabledAttr + 'type=\"checkbox\">';\n\t}\n\treturn checkbox;\n}\n\n// these next two functions are kind of hacky; probably should really be a\n// true block-level token with .tag=='label'\nfunction beginLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label>';\n\treturn token;\n}\n\nfunction endLabel(TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '</label>';\n\treturn token;\n}\n\nfunction afterLabel(content, id, TokenConstructor) {\n\tvar token = new TokenConstructor('html_inline', '', 0);\n\ttoken.content = '<label class=\"task-list-item-label\" for=\"' + id + '\">' + content + '</label>';\n\ttoken.attrs = [{for: id}];\n\treturn token;\n}\n\nfunction isInline(token) { return token.type === 'inline'; }\nfunction isParagraph(token) { return token.type === 'paragraph_open'; }\nfunction isListItem(token) { return token.type === 'list_item_open'; }\n\nfunction startsWithTodoMarkdown(token) {\n\t// leading whitespace in a list item is already trimmed off by markdown-it\n\treturn token.content.indexOf('[ ] ') === 0 || token.content.indexOf('[x] ') === 0 || token.content.indexOf('[X] ') === 0;\n}\n"],
  "mappings": "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",
  "names": []
}
