{
  "version": 3,
  "sources": ["../../markdown-it-footnote/index.mjs"],
  "sourcesContent": ["// Process footnotes\n//\n'use strict'\n\n/// /////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction render_footnote_anchor_name (tokens, idx, options, env/*, slf */) {\n  const n = Number(tokens[idx].meta.id + 1).toString()\n  let prefix = ''\n\n  if (typeof env.docId === 'string') prefix = `-${env.docId}-`\n\n  return prefix + n\n}\n\nfunction render_footnote_caption (tokens, idx/*, options, env, slf */) {\n  let n = Number(tokens[idx].meta.id + 1).toString()\n\n  if (tokens[idx].meta.subId > 0) n += `:${tokens[idx].meta.subId}`\n\n  return `[${n}]`\n}\n\nfunction render_footnote_ref (tokens, idx, options, env, slf) {\n  const id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf)\n  const caption = slf.rules.footnote_caption(tokens, idx, options, env, slf)\n  let refid = id\n\n  if (tokens[idx].meta.subId > 0) refid += `:${tokens[idx].meta.subId}`\n\n  return `<sup class=\"footnote-ref\"><a href=\"#fn${id}\" id=\"fnref${refid}\">${caption}</a></sup>`\n}\n\nfunction render_footnote_block_open (tokens, idx, options) {\n  return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n         '<ol class=\"footnotes-list\">\\n'\n}\n\nfunction render_footnote_block_close () {\n  return '</ol>\\n</section>\\n'\n}\n\nfunction render_footnote_open (tokens, idx, options, env, slf) {\n  let id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf)\n\n  if (tokens[idx].meta.subId > 0) id += `:${tokens[idx].meta.subId}`\n\n  return `<li id=\"fn${id}\" class=\"footnote-item\">`\n}\n\nfunction render_footnote_close () {\n  return '</li>\\n'\n}\n\nfunction render_footnote_anchor (tokens, idx, options, env, slf) {\n  let id = slf.rules.footnote_anchor_name(tokens, idx, options, env, slf)\n\n  if (tokens[idx].meta.subId > 0) id += `:${tokens[idx].meta.subId}`\n\n  /* â†© with escape code to prevent display as Apple Emoji on iOS */\n  return ` <a href=\"#fnref${id}\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>`\n}\n\nexport default function footnote_plugin (md) {\n  const parseLinkLabel = md.helpers.parseLinkLabel\n  const isSpace = md.utils.isSpace\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close\n  md.renderer.rules.footnote_open         = render_footnote_open\n  md.renderer.rules.footnote_close        = render_footnote_close\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor\n\n  // helpers (only used in other rules, no tokens are attached to those)\n  md.renderer.rules.footnote_caption      = render_footnote_caption\n  md.renderer.rules.footnote_anchor_name  = render_footnote_anchor_name\n\n  // Process footnote block definition\n  function footnote_def (state, startLine, endLine, silent) {\n    const start = state.bMarks[startLine] + state.tShift[startLine]\n    const max = state.eMarks[startLine]\n\n    // line should be at least 5 chars - \"[^x]:\"\n    if (start + 4 > max) return false\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) return false\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) return false\n\n    let pos\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) return false\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break\n      }\n    }\n\n    if (pos === start + 2) return false // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) return false\n    if (silent) return true\n    pos++\n\n    if (!state.env.footnotes) state.env.footnotes = {}\n    if (!state.env.footnotes.refs) state.env.footnotes.refs = {}\n    const label = state.src.slice(start + 2, pos - 2)\n    state.env.footnotes.refs[`:${label}`] = -1\n\n    const token_fref_o = new state.Token('footnote_reference_open', '', 1)\n    token_fref_o.meta  = { label }\n    token_fref_o.level = state.level++\n    state.tokens.push(token_fref_o)\n\n    const oldBMark = state.bMarks[startLine]\n    const oldTShift = state.tShift[startLine]\n    const oldSCount = state.sCount[startLine]\n    const oldParentType = state.parentType\n\n    const posAfterColon = pos\n    const initial = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine])\n    let offset = initial\n\n    while (pos < max) {\n      const ch = state.src.charCodeAt(pos)\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4\n        } else {\n          offset++\n        }\n      } else {\n        break\n      }\n\n      pos++\n    }\n\n    state.tShift[startLine] = pos - posAfterColon\n    state.sCount[startLine] = offset - initial\n\n    state.bMarks[startLine] = posAfterColon\n    state.blkIndent += 4\n    state.parentType = 'footnote'\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true)\n\n    state.parentType = oldParentType\n    state.blkIndent -= 4\n    state.tShift[startLine] = oldTShift\n    state.sCount[startLine] = oldSCount\n    state.bMarks[startLine] = oldBMark\n\n    const token_fref_c = new state.Token('footnote_reference_close', '', -1)\n    token_fref_c.level = --state.level\n    state.tokens.push(token_fref_c)\n\n    return true\n  }\n\n  // Process inline footnotes (^[...])\n  function footnote_inline (state, silent) {\n    const max = state.posMax\n    const start = state.pos\n\n    if (start + 2 >= max) return false\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) return false\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) return false\n\n    const labelStart = start + 2\n    const labelEnd = parseLinkLabel(state, start + 1)\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) return false\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      if (!state.env.footnotes) state.env.footnotes = {}\n      if (!state.env.footnotes.list) state.env.footnotes.list = []\n      const footnoteId = state.env.footnotes.list.length\n      const tokens = []\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens\n      )\n\n      const token = state.push('footnote_ref', '', 0)\n      token.meta = { id: footnoteId }\n\n      state.env.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens\n      }\n    }\n\n    state.pos = labelEnd + 1\n    state.posMax = max\n    return true\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref (state, silent) {\n    const max = state.posMax\n    const start = state.pos\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) return false\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) return false\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) return false\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) return false\n\n    let pos\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) return false\n      if (state.src.charCodeAt(pos) === 0x0A) return false\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break\n      }\n    }\n\n    if (pos === start + 2) return false // no empty footnote labels\n    if (pos >= max) return false\n    pos++\n\n    const label = state.src.slice(start + 2, pos - 1)\n    if (typeof state.env.footnotes.refs[`:${label}`] === 'undefined') return false\n\n    if (!silent) {\n      if (!state.env.footnotes.list) state.env.footnotes.list = []\n\n      let footnoteId\n\n      if (state.env.footnotes.refs[`:${label}`] < 0) {\n        footnoteId = state.env.footnotes.list.length\n        state.env.footnotes.list[footnoteId] = { label, count: 0 }\n        state.env.footnotes.refs[`:${label}`] = footnoteId\n      } else {\n        footnoteId = state.env.footnotes.refs[`:${label}`]\n      }\n\n      const footnoteSubId = state.env.footnotes.list[footnoteId].count\n      state.env.footnotes.list[footnoteId].count++\n\n      const token = state.push('footnote_ref', '', 0)\n      token.meta = { id: footnoteId, subId: footnoteSubId, label }\n    }\n\n    state.pos = pos\n    state.posMax = max\n    return true\n  }\n\n  // Glue footnote tokens to end of token stream\n  function footnote_tail (state) {\n    let tokens\n    let current\n    let currentLabel\n    let insideRef = false\n    const refTokens = {}\n\n    if (!state.env.footnotes) { return }\n\n    state.tokens = state.tokens.filter(function (tok) {\n      if (tok.type === 'footnote_reference_open') {\n        insideRef = true\n        current = []\n        currentLabel = tok.meta.label\n        return false\n      }\n      if (tok.type === 'footnote_reference_close') {\n        insideRef = false\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentLabel] = current\n        return false\n      }\n      if (insideRef) { current.push(tok) }\n      return !insideRef\n    })\n\n    if (!state.env.footnotes.list) { return }\n    const list = state.env.footnotes.list\n\n    state.tokens.push(new state.Token('footnote_block_open', '', 1))\n\n    for (let i = 0, l = list.length; i < l; i++) {\n      const token_fo = new state.Token('footnote_open', '', 1)\n      token_fo.meta = { id: i, label: list[i].label }\n      state.tokens.push(token_fo)\n\n      if (list[i].tokens) {\n        tokens = []\n\n        const token_po = new state.Token('paragraph_open', 'p', 1)\n        token_po.block = true\n        tokens.push(token_po)\n\n        const token_i = new state.Token('inline', '', 0)\n        token_i.children = list[i].tokens\n        token_i.content = list[i].content\n        tokens.push(token_i)\n\n        const token_pc = new state.Token('paragraph_close', 'p', -1)\n        token_pc.block    = true\n        tokens.push(token_pc)\n      } else if (list[i].label) {\n        tokens = refTokens[`:${list[i].label}`]\n      }\n\n      if (tokens) state.tokens = state.tokens.concat(tokens)\n\n      let lastParagraph\n\n      if (state.tokens[state.tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = state.tokens.pop()\n      } else {\n        lastParagraph = null\n      }\n\n      const t = list[i].count > 0 ? list[i].count : 1\n      for (let j = 0; j < t; j++) {\n        const token_a = new state.Token('footnote_anchor', '', 0)\n        token_a.meta = { id: i, subId: j, label: list[i].label }\n        state.tokens.push(token_a)\n      }\n\n      if (lastParagraph) {\n        state.tokens.push(lastParagraph)\n      }\n\n      state.tokens.push(new state.Token('footnote_close', '', -1))\n    }\n\n    state.tokens.push(new state.Token('footnote_block_close', '', -1))\n  }\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: ['paragraph', 'reference'] })\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline)\n  md.inline.ruler.after('footnote_inline', 'footnote_ref', footnote_ref)\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail)\n};\n"],
  "mappings": "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",
  "names": []
}
